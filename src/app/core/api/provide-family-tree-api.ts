import { provideHttpClient, withInterceptors } from '@angular/common/http';
import { EnvironmentProviders, inject, makeEnvironmentProviders } from '@angular/core';
import { FamilyTreeApiPort } from './domain/family-tree.api.port';
import { API_CONFIG, ApiConfig, FAMILY_TREE_API } from './infra/api.config';
import { HttpFamilyTreeApiService } from './infra/http-family-tree.api.service';
import { MockFamilyTreeApiService } from './infra/mock-family-tree.api.service';
import { baseUrlInterceptor } from './infra/interceptors/base-url.interceptor';
import { loggingInterceptor } from './infra/interceptors/logging.interceptor';
import { telegramAuthInterceptorFn } from './infra/interceptors/telegram-auth.interceptor';

/**
 * –ü–æ–¥–∫–ª—é—á–∞–µ—Ç:
 * - API_CONFIG
 * - HttpClient —Å –∏–Ω—Ç–µ—Ä—Å–µ–ø—Ç–æ—Ä–∞–º–∏ (logging, baseUrl, telegram auth)
 * - –†–µ–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ—Ä—Ç–∞ FamilyTreeApiPort
 */
export function provideFamilyTreeApi(config: ApiConfig): EnvironmentProviders {
  console.log('üîß [provideFamilyTreeApi] Configuring API with:', config);
  return makeEnvironmentProviders([
    { provide: API_CONFIG, useValue: config },

    provideHttpClient(
      withInterceptors([
        loggingInterceptor,
        (req, next) => baseUrlInterceptor(inject(API_CONFIG))(req, next),
        telegramAuthInterceptorFn,
      ])
    ),

    HttpFamilyTreeApiService,
    { provide: FAMILY_TREE_API, useExisting: HttpFamilyTreeApiService },
    { provide: FamilyTreeApiPort, useExisting: HttpFamilyTreeApiService },
  ]);
}

/**
 * –ü–æ–¥–∫–ª—é—á–∞–µ—Ç –º–æ–∫–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ API:
 * - MockFamilyTreeApiService —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
 * - –†–µ–∞–ª–∏–∑–∞—Ü–∏—é –ø–æ—Ä—Ç–∞ FamilyTreeApiPort
 */
export function provideMockFamilyTreeApi(): EnvironmentProviders {
  console.log('üîß [provideMockFamilyTreeApi] Configuring Mock API');
  return makeEnvironmentProviders([
    MockFamilyTreeApiService,
    { provide: FAMILY_TREE_API, useExisting: MockFamilyTreeApiService },
    { provide: FamilyTreeApiPort, useExisting: MockFamilyTreeApiService },
  ]);
}
